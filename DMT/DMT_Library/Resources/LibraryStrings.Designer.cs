//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DMT.Library.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LibraryStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LibraryStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("DMT.Library.Resources.LibraryStrings", typeof(LibraryStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Alt.
        /// </summary>
        internal static string AltModifierKey {
            get {
                return ResourceManager.GetString("AltModifierKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Center image without any stretching.
        /// </summary>
        internal static string Center {
            get {
                return ResourceManager.GetString("Center", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ctrl.
        /// </summary>
        internal static string CtrlModifierKey {
            get {
                return ResourceManager.GetString("CtrlModifierKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --DISABLED--.
        /// </summary>
        internal static string DisabledHotKey {
            get {
                return ResourceManager.GetString("DisabledHotKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Different image on each monitor (all changed together).
        /// </summary>
        internal static string ManyToMany {
            get {
                return ResourceManager.GetString("ManyToMany", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Different image on each monitor (only one changed at a time).
        /// </summary>
        internal static string ManyToManyInSequence {
            get {
                return ResourceManager.GetString("ManyToManyInSequence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dual Monitor Tools.
        /// </summary>
        internal static string MyTitle {
            get {
                return ResourceManager.GetString("MyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You need to select a key from the drop down box.
        /// </summary>
        internal static string NoKey {
            get {
                return ResourceManager.GetString("NoKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For future combatibility with Windows 7 and later, you may want to use {0} for this function, as this is what Windows 7 uses..
        /// </summary>
        internal static string NotWin7 {
            get {
                return ResourceManager.GetString("NotWin7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Same image on each monitor.
        /// </summary>
        internal static string OneToMany {
            get {
                return ResourceManager.GetString("OneToMany", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One image stretched over all monitors.
        /// </summary>
        internal static string OneToOneBig {
            get {
                return ResourceManager.GetString("OneToOneBig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Over stretch to cover the monitor(s).
        /// </summary>
        internal static string OverStretch {
            get {
                return ResourceManager.GetString("OverStretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The registration of this hotkey has failed.
        ///Try another hot key combination..
        /// </summary>
        internal static string RegisterFail {
            get {
                return ResourceManager.GetString("RegisterFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shift.
        /// </summary>
        internal static string ShiftModifierKey {
            get {
                return ResourceManager.GetString("ShiftModifierKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stretch image to fill monitor(s) - ignores aspect ratio.
        /// </summary>
        internal static string Stretch {
            get {
                return ResourceManager.GetString("Stretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Under stretch so as not to clip image.
        /// </summary>
        internal static string UnderStretch {
            get {
                return ResourceManager.GetString("UnderStretch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This functionality is already provided by Windows 7 using {0}, so there is no need to enable this unless you want SwapScreen to handle it using a different hotkey..
        /// </summary>
        internal static string Win7 {
            get {
                return ResourceManager.GetString("Win7", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Win.
        /// </summary>
        internal static string WinModifierKey {
            get {
                return ResourceManager.GetString("WinModifierKey", resourceCulture);
            }
        }
    }
}
